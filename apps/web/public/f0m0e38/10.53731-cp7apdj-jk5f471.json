{"id":"https://doi.org/10.53731/cp7apdj-jk5f471","title":"Announcing Commonmeta","link":"https://doi.org/10.53731/cp7apdj-jk5f471","published":"2023-03-09T17:36:44.000+00:00","description":"This week I launched Commonmeta, a new scholarly metadata standard described at https://commonmeta.org. Commonmeta is the result of working on conversion tools for scholarly metadata for many years. One...","isPermalink":true,"tags":["News"],"authors":[{"name":"Martin Fenner","url":"https://orcid.org/0000-0003-1419-2405"}],"image":"https://blog.front-matter.io/content/images/2023/03/standards_2x.png","modified":"2023-03-09T17:36:44.000+00:00","contentHtml":" <p><img src=\"https://blog.front-matter.io/content/images/2023/03/standards_2x.png\"></p><p>This week I launched <strong>Commonmeta</strong>, a new scholarly metadata standard described at <a href=\"https://commonmeta.org/\">https://commonmeta.org</a>. Commonmeta is the result of working on conversion tools for scholarly metadata for many years. One conclusion early on was that these conversions are many-to-many, so it becomes much easier to have an internal format that is the intermediate step for these conversions.</p><p>Commonmeta is inspired by two initiatives: <a href=\"https://codemeta.github.io/\">Codemeta</a> and <a href=\"https://commonmark.org\">Commonmark</a>. CodeMeta contributors are creating a minimal metadata schema for science software and code, in JSON and XML. The goal of CodeMeta is to create a concept vocabulary that can be used to standardize the exchange of software metadata across repositories and organizations. Commonmark is a strongly defined, highly compatible specification of Markdown, along with a suite of comprehensive tests to validate Markdown implementations against this specification. </p><p>These two specifications not only inspired the name but also the principles of how I want to see Commonmeta operate:</p><ul><li>driven by real-world implementations and not committees</li><li>features that focus on what is common in existing implementations/formats</li><li>a testable specification</li></ul><p>The website goes into a little bit more detail about why I didn't pick any the existing standards but instead came up with a new metadata standard. This is a familiar pattern made famous by the XKCD comic shown above.</p><p>As I want this to be driven by real-world implementations and not committees, I also in the last few weeks launched<a href=\"https://github.com/front-matter/commonmeta-py\"> commonmeta-py</a>, a Python implementation of the standard available on <a href=\"https://pypi.org/project/commonmeta-py/\">PyPi</a>. And in a few months, I hope to have tweaked the <a href=\"https://github.com/front-matter/briard\">Ruby Gem</a> that I originally wrote a few years ago to support Commonmeta as the internal format.</p><p>With testable specification, I mean both a JSON Schema to describe Commonmeta and many, many tests that validate the conversions with real-world data. The JSON Schema is available <a href=\"https://commonmeta.org/schema\">here</a>, and will become stable once it reaches version 1.0. commonmeta-py comes with lots of tests, but I hope to further improve the test coverage.</p><p>Please reach out to me if you want to help with Commonmeta, in particular, work on implementations in other languages, such as Javascript, PHP, or Java.</p> "}