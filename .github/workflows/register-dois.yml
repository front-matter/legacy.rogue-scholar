name: Register DOIs for new Posts
on:
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'
jobs:
  register:
    runs-on: ubuntu-latest
    outputs:
      postid: ${{ steps.pending_post.outputs.POSTS }}
      doi: ${{ steps.random_doi.outputs.DOI }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4       
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install commonmeta-py
        run: poetry install --no-root
      - name: Find blog post without DOI
        run: |
          echo "::set-output name=POSTID::$(poetry run commonmeta json-feed unregistered)"
        id: pending_post
      - name: Generate random DOI
        if: steps.pending_post.outputs.POSTID != ''
        run: |
          echo "::set-output name=DOI::$(poetry run commonmeta encode-by-id ${{ steps.pending_post.outputs.POSTID }})"
        id: random_doi
      - name: Generate XML
        if: steps.random_doi.outputs.DOI != ''
        run: |
          mkdir -p upload
          poetry run commonmeta convert https://api.rogue-scholar.org/posts/"${{ steps.pending_post.outputs.POSTID }}" --doi "${{ steps.random_doi.outputs.DOI }}" --depositor "${{ secrets.CROSSREF_DEPOSITOR_NAME }}" --email "${{ secrets.CROSSREF_DEPOSITOR_EMAIL }}" --registrant "${{ secrets.CROSSREF_REGISTRANT }}" -t crossref_xml --show-errors > upload/${{ steps.pending_post.outputs.POSTID }}
      - name: Upload
        if: steps.random_doi.outputs.DOI != ''
        uses: actions/upload-artifact@v3
        with:
          name: uploads
          path: upload/${{ steps.pending_post.outputs.POSTID }}
      - name: Download
        if: steps.random_doi.outputs.DOI != ''
        uses: actions/download-artifact@v3
        with:
          name: uploads
      - name: Register content
        if: steps.random_doi.outputs.DOI != ''
        run: |
          curl -X POST https://doi.crossref.org/servlet/deposit -F "operation=doMDUpload" -F "login_id=${{ secrets.CROSSREF_USERNAME_WITH_ROLE }}" -F "login_passwd=${{ secrets.CROSSREF_PASSWORD }}" -F "fname=@upload/${{ steps.pending_post.outputs.POSTID }}"
      - name: Set current date as variable
        if: steps.random_doi.outputs.DOI != ''
        run: |
          echo "::set-output name=NOW::$(date +'%s')"
        id: current_date
      - name: update Rogue Scholar post
        if: steps.random_doi.outputs.DOI != ''
        run: |
          curl -X PATCH https://db.rogue-scholar.org/rest/v1/posts?id=eq.${{ steps.pending_post.outputs.POSTID }} -H "apikey: ${{ secrets.SUPABASE_KEY }}" -H "Authorization: Bearer ${{ secrets.SUPABASE_KEY }}" -H "Content-Type: application/json" -H "Prefer: return=minimal" -d '{ "doi": "${{ steps.random_doi.outputs.DOI }}", "indexed_at": "${{ steps.current_date.outputs.NOW }}", "indexed": true }'
      - name: Find blog id for post
        run: |
          echo "::set-output name=SLUG::$(poetry run commonmeta json-feed blog_slug --id ${{ steps.pending_post.outputs.POSTID }})"
        id: blog
      - name: Update Front Matter blog
        if: steps.blog.outputs.SLUG == 'front_matter'
        run: poetry run commonmeta update-ghost-post --api-key ${{ secrets.GHOST_ADMIN_API_KEY }} --api-url ${{ secrets.GHOST_ADMIN_API_URL }} ${{ steps.pending_post.outputs.POSTID }}
      - name: Update Upstream blog
        if: steps.blog.outputs.SLUG == 'upstream'
        run: poetry run commonmeta update-ghost-post --api-key ${{ secrets.UPSTREAM_ADMIN_API_KEY }} --api-url ${{ secrets.UPSTREAM_ADMIN_API_URL }} ${{ secrets.UPSTREAM_ADMIN_API_URL }} ${{ steps.pending_post.outputs.POSTID }}
      - name: Update OA.Works blog
        if: steps.blog.outputs.SLUG == 'oa_works'
        run: poetry run commonmeta update-ghost-post --api-key ${{ secrets.OA_WORKS_ADMIN_API_KEY }} --api-url ${{ secrets.OA_WORKS_ADMIN_API_URL }} ${{ steps.pending_post.outputs.POSTID }}
