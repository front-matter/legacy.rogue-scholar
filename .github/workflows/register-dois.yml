name: Register DOIs for new Posts
on:
  workflow_dispatch:
  schedule:
    - cron: "20,30,40,50 8,17 * * *"
jobs:
  register:
    runs-on: ubuntu-latest
    outputs:
      postid: ${{ steps.pending_post.outputs.POSTS }}
      doi: ${{ steps.random_doi.outputs.DOI }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3       
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Set up Ruby 3.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
      - name: Install commonmeta-ruby
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Find blog post without DOI
        run: |
          echo "::set-output name=POSTID::$(bundle exec commonmeta json_feed_unregistered)"
        id: pending_post
      - name: Generate random DOI
        if: steps.pending_post.outputs.POSTID != ''
        run: |
          echo "::set-output name=DOI::$(bundle exec commonmeta encode_by_uuid ${{ steps.pending_post.outputs.POSTID }})"
        id: random_doi
      - name: Generate XML
        if: steps.random_doi.outputs.DOI != ''
        run: |
          mkdir -p upload
          bundle exec commonmeta https://rogue-scholar.org/api/posts/"${{ steps.pending_post.outputs.POSTID }}" --doi "${{ steps.random_doi.outputs.DOI }}" --depositor "${{ secrets.CROSSREF_DEPOSITOR_NAME }}" --email "${{ secrets.CROSSREF_DEPOSITOR_EMAIL }}" --registrant "${{ secrets.CROSSREF_REGISTRANT }}" -t crossref_xml > upload/${{ steps.pending_post.outputs.POSTID }}
      - name: Upload
        if: steps.random_doi.outputs.DOI != ''
        uses: actions/upload-artifact@v2
        with:
            name: uploads
            path: upload/${{ steps.pending_post.outputs.POSTID }}         
      - name: Download
        if: steps.random_doi.outputs.DOI != ''
        uses: actions/download-artifact@v2
        with:
            name: uploads
      - name: Register content
        if: steps.random_doi.outputs.DOI != ''
        run: |
          curl -X POST https://doi.crossref.org/servlet/deposit -F "operation=doMDUpload" -F "login_id=${{ secrets.CROSSREF_USERNAME_WITH_ROLE }}" -F "login_passwd=${{ secrets.CROSSREF_PASSWORD }}" -F "fname=@upload/${{ steps.pending_post.outputs.POSTID }}"
      - name: Set current date as env variable
        if: steps.random_doi.outputs.DOI != ''
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      - name: update Rogue Scholar post
        if: steps.random_doi.outputs.DOI != ''
        run: |
          curl -X PATCH https://api.rogue-scholar.org/rest/v1/posts?uuid=eq.${{ steps.pending_post.outputs.POSTID }} -H "apikey: ${{ secrets.SUPABASE_KEY }}" -H "Authorization: Bearer ${{ secrets.SUPABASE_KEY }}" -H "Content-Type: application/json" -H "Prefer: return=minimal" -d '{ "id": "${{ steps.random_doi.outputs.DOI }}", "date_indexed": "$NOW" }'
      - name: Update Front Matter blog
        if: startsWith( steps.random_doi.outputs.DOI, 'https://doi.org/10.53731/' )
        env:
          API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
          API_URL: ${{ secrets.GHOST_ADMIN_API_URL }}
        run:
          bundle exec commonmeta update_ghost_post ${{ steps.pending_post.outputs.POSTID }}
      - name: Update Upstream blog
        if: startsWith( steps.random_doi.outputs.DOI, 'https://doi.org/10.54900/' )
        env:
          API_KEY: ${{ secrets.UPSTREAM_ADMIN_API_KEY }}
          API_URL: ${{ secrets.UPSTREAM_ADMIN_API_URL }}
        run:
          bundle exec commonmeta update_ghost_post ${{ steps.pending_post.outputs.POSTID }}